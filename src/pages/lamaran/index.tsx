import Navbar from "@Fragments/Navbar";
import { GetServerSidePropsContext } from "next";
import { User, getServerSession } from "next-auth";
import Head from "next/head";
import * as React from "react";
import { authOptions } from "../api/auth/[...nextauth]";
import { JobApplication } from "@prisma/client";
import JobApplicationService from "@/services/job-application";
import ReactLoading from "react-loading";
import vacancy from "../../services/vacancy.json";
import moment from "moment";
import "moment/locale/id";
import ReactPaginate from "react-paginate";

type ApplicationPageProps = {
  session: User;
};

export default function ApplicationPage({ session }: ApplicationPageProps) {
  const [jobApplications, setJobApplications] = React.useState<
    JobApplication[]
  >([]);
  const [isLoading, setIsLoading] = React.useState(true);
  const ITEM_PER_PAGE = 5;
  const [itemsOffset, setItemsOffset] = React.useState(0);
  const endOffset = itemsOffset + ITEM_PER_PAGE;
  const DATA = jobApplications.slice(itemsOffset, endOffset);
  const pageCount = Math.ceil(jobApplications.length / ITEM_PER_PAGE);
  const handlePageClick = ({ selected }: { selected: number }) => {
    const newOffset = (selected * ITEM_PER_PAGE) % jobApplications.length;
    setItemsOffset(newOffset);
  };

  React.useEffect(() => {
    if (session) {
      JobApplicationService.getAll().then((response) => {
        const data = response.data.data;
        setJobApplications(data);
        setIsLoading(false);
      });
    }
    return () => {};
  }, [session]);

  if (isLoading) {
    return (
      <div className="h-screen flex justify-center items-center w-full">
        <ReactLoading type="bars" className="w-20 h-20" color="#2563eb" />
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Histori Lamaran</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Navbar />
        <div className="px-[3%] md:px-[10%] w-full mt-5">
          <h1 className="text-gray-700 font-bold text-2xl">Riwayat lamaran</h1>
          <p className="text-sm text-gray-500">
            Cek berkala untuk mendapatkan update tentang lamaran anda
          </p>
          {jobApplications?.length > 0 ? (
            <>
              <div className="space-y-5 mt-10">
                {DATA?.map(({ id, jobVacancyId, status, createdAt }) => {
                  const job = vacancy.jobs.find(
                    (item) => item.id === jobVacancyId
                  );
                  return (
                    <div
                      key={id}
                      className={"h-16 w-full border-b flex justify-between"}
                    >
                      <div>
                        <h1 className="font-bold text-gray-700">
                          {job?.title}
                        </h1>
                        <p className="text-gray-500 text-sm font-medium">
                          {moment(createdAt).locale("id").format("DD MMM YYYY")}
                        </p>
                      </div>
                      <div>
                        <span className="bg-blue-100 text-blue-500 text-sm px-2 rounded py-1">
                          {status}
                        </span>
                      </div>
                    </div>
                  );
                })}
              </div>
              <div className="mb-8">
                <ReactPaginate
                  pageCount={pageCount}
                  onPageChange={handlePageClick}
                  containerClassName={"flex mt-10 items-center gap-4"}
                  nextClassName="font-medium text-gray-400"
                  previousClassName="font-medium text-gray-400"
                  pageClassName={
                    "w-9 aspect-square flex items-center justify-center text-gray-400"
                  }
                  activeClassName="bg-white rounded-md shadow-md"
                />
              </div>
            </>
          ) : (
            <div className="border rounded p-5 text-center">
              <h2 className="text-gray-400">Lamaran masih kosong.</h2>
            </div>
          )}
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await getServerSession(context.req, context.res, authOptions);
  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }
  const { image, ...newSession } = session.user as User;
  return {
    props: {
      session: newSession,
    },
  };
}
