import Button from "@/components/Elements/Button";
import Field from "@/components/Elements/Field";
import Head from "next/head";
import * as React from "react";
import { toast } from "react-toastify";
import AuthAPI from "@/services/auth";
import RegisterForm, { RegisterValue } from "@Fragments/RegisterForm";
import { signIn } from "next-auth/react";
import { getServerSession } from "next-auth";
import { GetServerSidePropsContext } from "next";
import { authOptions } from "./api/auth/[...nextauth]";
import { ExclamationTriangleIcon } from "@heroicons/react/24/outline";
import { FormikHelpers } from "formik";

export default function SignupPage() {
  const initialValues: RegisterValue = {
    email: "",
    name: "",
    password: "",
    passwordConfirmation: "",
  };
  const handleSubmit = async (
    values: RegisterValue,
    formikHelpers: FormikHelpers<RegisterValue>
  ) => {
    try {
      await AuthAPI.register(values);
      toast.success("Horee, akun kamu sudah aktif", {
        autoClose: 500,
        pauseOnHover: false,
      });
      signIn();
    } catch (error: any) {
      toast.error(error?.response?.data?.message, {
        autoClose: 500,
        pauseOnHover: false,
      });
    } finally {
      formikHelpers.resetForm();
      formikHelpers.setSubmitting(false);
    }
  };

  return (
    <>
      <Head>
        <title>Buat akun</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <RegisterForm initialValue={initialValues} onSubmit={handleSubmit}>
          {(props) => {
            return (
              <>
                <Field
                  id="name"
                  placeholder="Contoh: John Doe"
                  name="name"
                  label="Nama lengkap"
                />
                <div className="border border-red-200 rounded-lg bg-red-100 p-3 w-full flex items-start gap-2 mt-3">
                  <ExclamationTriangleIcon className="text-red-300 w-7 aspect-square shrink-0" />
                  <div className="text-red-400 text-sm ">
                    <h2 className="font-medium">Peringatan</h2>
                    <p className="xs">
                      Nama lengkap dan Alamat email tidak dapat di ganti.
                      Pastikan bahwa tidak ada kesalahan pada saat pendafaran.
                    </p>
                  </div>
                </div>
                <Field
                  id="email"
                  placeholder="contoh@gmail.com"
                  name="email"
                  label="Alamat Email"
                />
                <Field
                  id="password"
                  placeholder="buat password kamu"
                  type="password"
                  name="password"
                  label="Password"
                />
                <Field
                  id="passwordConfirmation"
                  placeholder="masukan ulang password"
                  type="password"
                  name="passwordConfirmation"
                  label="Password Konfirmasi"
                />
                <Button
                  disabled={props.isSubmitting}
                  type="submit"
                  className="col-span-2"
                >
                  {props.isSubmitting ? <>loading...</> : <>Daftar Sekarang</>}
                </Button>
              </>
            );
          }}
        </RegisterForm>
      </main>
    </>
  );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await getServerSession(context.req, context.res, authOptions);
  if (session) {
    return {
      redirect: {
        permanent: false,
        destination: "/",
      },
    };
  }
  return {
    props: {},
  };
}
